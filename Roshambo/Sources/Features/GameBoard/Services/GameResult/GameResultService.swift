//
//  GameResultService.swift
//  Roshambo
//
//  Created Christian Elies on 24.04.19.
//  Copyright Â© 2019 Christian Elies. All rights reserved.
//
//  Template generated by Christian Elies @crelies
//

import Foundation

protocol GameResultServiceProvider {
	var gameResultService: GameResultServiceProtocol { get }
}

protocol GameResultServiceProtocol {
    func getWinner(roshambo1: Roshambo, roshambo2: Roshambo) -> Roshambo?
}

final class GameResultService {
	private let dependencies: GameResultServiceDependenciesProtocol

	init(dependencies: GameResultServiceDependenciesProtocol) {
		self.dependencies = dependencies
	}
}

extension GameResultService: GameResultServiceProtocol {
    func getWinner(roshambo1: Roshambo, roshambo2: Roshambo) -> Roshambo? {
        switch (roshambo1, roshambo2) {
            case (.scissors, .rock):
                return .rock
            case (.scissors, .paper):
                return .scissors
            case (.rock, .paper):
                return .paper
            case (.rock, .scissors):
                return .rock
            case (.paper, .scissors):
                return .scissors
            case (.paper, .rock):
                return .paper
            default:
                return nil
        }
    }
}
