//
//  GameBoardInteractor.swift
//  Roshambo
//
//  Created Christian Elies on 24.04.19.
//  Copyright Â© 2019 Christian Elies. All rights reserved.
//
//  Template generated by Christian Elies @crelies
//  https://www.christianelies.de
//

import Foundation

protocol GameBoardInteractorProtocol {
    func generateRoshambo() -> Roshambo
    func getGameResult(playerRoshambo: Roshambo, computerRoshambo: Roshambo) -> GameResult
}

final class GameBoardInteractor {
    private let dependencies: GameBoardInteractorDependenciesProtocol
    
    init(dependencies: GameBoardInteractorDependenciesProtocol) {
        self.dependencies = dependencies
    }
}

extension GameBoardInteractor: GameBoardInteractorProtocol {
    func generateRoshambo() -> Roshambo {
        return Roshambo.allCases.randomElement()!
    }
    
    func getGameResult(playerRoshambo: Roshambo, computerRoshambo: Roshambo) -> GameResult {
        return dependencies.gameResultService.getGameResult(playerRoshambo: playerRoshambo, computerRoshambo: computerRoshambo)
    }
}
