//
//  GameBoardWireframe.swift
//  Roshambo
//
//  Created Christian Elies on 24.04.19.
//  Copyright Â© 2019 Christian Elies. All rights reserved.
//
//  Template generated by Christian Elies @crelies
//  https://www.christianelies.de
//

import UIKit

protocol GameBoardWireframeProtocol {
    static func makeViewController(delegate: GameBoardDelegateProtocol?) -> (UIViewController & GameBoardProtocol)
}

struct GameBoardWireframe: GameBoardWireframeProtocol {
    static func makeViewController(delegate: GameBoardDelegateProtocol?) -> (UIViewController & GameBoardProtocol) {
        let viewController = GameBoardViewController()

        let routerDependencies = GameBoardRouterDependencies()
        let router = GameBoardRouter(dependencies: routerDependencies, viewController: viewController)

        let interactorDependencies = GameBoardInteractorDependencies()
        let presenterDependencies = GameBoardPresenterDependencies()

        let interactor = GameBoardInteractor(dependencies: interactorDependencies)
        let presenter = GameBoardPresenter(dependencies: presenterDependencies, view: viewController, interactor: interactor, router: router, delegate: delegate)
        viewController.setPresenter(presenter)
        
        return viewController
    }
}
